#summary A guide to common JAASmine use cases.
#labels Restrict-View-Commit

<wiki:toc max_depth="2"/>

= Getting Started =
All JAASmine use cases share a few fundamental requirements:
== create a SPN ==
create a service principal name (SPN) using the active directory users and computers administration application.  we recommend creating a computer account with a non-expiring password.

*NOTE:* when needing to use encryption type des-cbc-md5, you should create a user account rather than a computer account, as this cannot be set for a computer type account

== create a keytab ==
 # create a keytab using the ktpass utility at windows command line (see sample command below).
 # copy keytab to {{{$CATALINA_BASE/conf}}}

{{{
ktpass -princ HTTP/machine-name.yourdomain.edu@AD.YOURDOMAIN.EDU -mapuser YOURREALM\service-username$ -mapop set +rndPass -out s:\path-to-file\service-username.keytab -crypto RC4-HMAC-NT
}}}

*NOTE:* to specify a password, use the -pass parameter (followed by the password), rather than using the +rndPass parameter, which randomly generates one.

*NOTE:* to inspect the SPNs specify the list option on the setspn utility at the windows command line ({{{setspn -L service-username}}})

*NOTE:* the principal must match to machine name (is this true?)

*NOTE:* the computer account must match the one created above

== create a jaas.conf ==
 # configure {{{jaas.conf}}} to accept SPNego tokens (see sample file below)
 # copy {{{jaas.conf}}} to {{{$CATALINA_BASE/conf}}}

{{{
/*
 *
 * jaas.conf
 *
 * A minimal configuration file for logins and SPNego token validation using
 * jaasmine-core.
 *
 * In addition to the configuration below, set the following system properties
 * at startup:
 *
 *     java.security.krb5.conf                 - Absolute path to the kerberos
 *                                               config file
 *
 *     java.security.auth.login.config         - Absolute path to this file
 *
 *     javax.security.auth.useSubjectCredsOnly - Set this value to false
 *
 * Optional system properties may be set for debugging purposes:
 *
 *     sun.security.krb5.debug - writes debug messages for Sun's implementation
 *                               of it's Kerberos APIs.
 *
 *     sun.security.jgss.debug - writes debug messages for Sun's implementation
 *                               of it's GSS APIs.
 *
 */



/*
 * This module is configured using the default name.  At a minimum, it uses the
 * com.sun.security.auth.module.Krb5LoginModule module class with the required
 * flag set.
 */
jaasmine.login {
    com.sun.security.auth.module.Krb5LoginModule
    required;
};

/*
 * This is the configuration needed to support SPNego token validation.
 *
 * The com.sun.security.auth.module.Krb5LoginModule module class should be used
 * with the required flag set.  The following module options should be set:
 *
 * principal - a quoted string that is the server principal name
 * storeKey  - set this to true
 * useKeyTab - set this to true
 * keyTab    - a quoted string that is the absolute path to the keytab file.
 */
com.sun.security.jgss.krb5.accept {
    com.sun.security.auth.module.Krb5LoginModule
    required
    principal="HTTP/machine-name.yourdomain.edu@AD.YOURDOMAIN.EDU"
    storeKey=true
    useKeyTab=true
//    keyTab="${catalina.base}${/}conf${/}machine-name.keytab";
    keyTab="/path/to/file/service-username.keytab";
};
}}}

*NOTE:* the keytab file path and name must match one created above

*NOTE:* the principal must match the SPN specified in the keytab created above

== create krb5.conf ==
 # configure {{{krb5.conf}}} to accept SPNego tokens (see sample file below)
 # copy {{{krb5.conf}}} to {{{$CATALINA_BASE/conf}}}

{{{
[libdefaults]
default_realm = AD.YOURDOMAIN.EDU
forwardable = true
proxiable = true

[realms]
AD.YOURDOMAIN.EDU = {
 kdc = ad-dc-p1.ad.yourdomain.edu
 kdc = ad-dc-p2.ad.yourdomain.edu
 admin_server = ad-dc-p1.ad.yourdomain.edu
 }
}}}

== create setenv.sh =
 # configure {{{setenv.sh}}} to take the system props needed for krb5 authN
 # copy {{{setenv.sh}}} to {{{$CATALINA_BASE/bin}}}

{{{
todo:show file
}}}

*NOTE:* the path to {{{java.security.krb5.conf}}} will vary

*NOTE:* the path to {{{java.security.auth.login.config}}} will vary

*NOTE:* the path to {{{CATALINA_PID}}} will vary

= Securing Web Services with JAASmine =

= Securing uPortal with JAASmine =

= Securing Kuali Rice with JAASmine =
 # deploy custom rice {{{LoginFilter}}}
 # add JAASmine login filter
 # configure {{{web.xml}}} for rice
 # update {{{rice-config.xml}}} to use the {{{LoginFilter}}}
 # restart tomcat